//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetPositionListenerComponent targetPositionListener { get { return (TargetPositionListenerComponent)GetComponent(GameComponentsLookup.TargetPositionListener); } }
    public bool hasTargetPositionListener { get { return HasComponent(GameComponentsLookup.TargetPositionListener); } }

    public void AddTargetPositionListener(System.Collections.Generic.List<ITargetPositionListener> newValue) {
        var index = GameComponentsLookup.TargetPositionListener;
        var component = CreateComponent<TargetPositionListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTargetPositionListener(System.Collections.Generic.List<ITargetPositionListener> newValue) {
        var index = GameComponentsLookup.TargetPositionListener;
        var component = CreateComponent<TargetPositionListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetPositionListener() {
        RemoveComponent(GameComponentsLookup.TargetPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetPositionListener;

    public static Entitas.IMatcher<GameEntity> TargetPositionListener {
        get {
            if (_matcherTargetPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetPositionListener = matcher;
            }

            return _matcherTargetPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTargetPositionListener(ITargetPositionListener value) {
        var listeners = hasTargetPositionListener
            ? targetPositionListener.value
            : new System.Collections.Generic.List<ITargetPositionListener>();
        listeners.Add(value);
        ReplaceTargetPositionListener(listeners);
    }

    public void RemoveTargetPositionListener(ITargetPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = targetPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTargetPositionListener();
        } else {
            ReplaceTargetPositionListener(listeners);
        }
    }
}
