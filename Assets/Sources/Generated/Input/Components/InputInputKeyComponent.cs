//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity inputKeyEntity { get { return GetGroup(InputMatcher.InputKey).GetSingleEntity(); } }
    public InputKeyComponent inputKey { get { return inputKeyEntity.inputKey; } }
    public bool hasInputKey { get { return inputKeyEntity != null; } }

    public InputEntity SetInputKey(string newValue) {
        if (hasInputKey) {
            throw new Entitas.EntitasException("Could not set InputKey!\n" + this + " already has an entity with InputKeyComponent!",
                "You should check if the context already has a inputKeyEntity before setting it or use context.ReplaceInputKey().");
        }
        var entity = CreateEntity();
        entity.AddInputKey(newValue);
        return entity;
    }

    public void ReplaceInputKey(string newValue) {
        var entity = inputKeyEntity;
        if (entity == null) {
            entity = SetInputKey(newValue);
        } else {
            entity.ReplaceInputKey(newValue);
        }
    }

    public void RemoveInputKey() {
        inputKeyEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public InputKeyComponent inputKey { get { return (InputKeyComponent)GetComponent(InputComponentsLookup.InputKey); } }
    public bool hasInputKey { get { return HasComponent(InputComponentsLookup.InputKey); } }

    public void AddInputKey(string newValue) {
        var index = InputComponentsLookup.InputKey;
        var component = CreateComponent<InputKeyComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInputKey(string newValue) {
        var index = InputComponentsLookup.InputKey;
        var component = CreateComponent<InputKeyComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInputKey() {
        RemoveComponent(InputComponentsLookup.InputKey);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputKey;

    public static Entitas.IMatcher<InputEntity> InputKey {
        get {
            if (_matcherInputKey == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputKey);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputKey = matcher;
            }

            return _matcherInputKey;
        }
    }
}
